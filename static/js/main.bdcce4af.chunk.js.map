{"version":3,"sources":["utils/deviceCheck.js","SharedComponents/IconHref/IconHref.js","Banner/Banner.js","LeftBanner/Tech/Tech.js","LeftBanner/LeftBanner.js","data.js","Details/Details.js","ErrorPages/MobileDeviceSupportError.js","App/App.js","serviceWorker.js","index.js"],"names":["deviceCheck","Android","navigator","userAgent","match","BlackBerry","iOS","Opera","Windows","any","this","IconHref","_ref","icon","url","text","react_default","a","createElement","href","className","react_fontawesome_index_es","pull","size","Banner","Icons","iconList","map","ic","posed","div","faGitSquare","faLinkedin","faEnvelope","faMobileAlt","Component","TechDiv","li","enter","opacity","transition","duration","exit","Tech","tech","id","react_pose_es","animateOnMount","key","concat","style","fontSize","LeftBanner","TechStackHeader","UL","Fragment","technologiesWorked","t","Object","assign","experience","Technologies","delay","ul","staggerChildren","classCallCheck","replace","data","from","to","role","employer","client","domain","responsibilities","Details","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","isVisible","setTimeout","setState","Container","LI","l","i","faTerminal","transform","MobileDeviceSupportError","faCog","spin","class","faMobile","App","MobileDeviceSupportError_MobileDeviceSupportError","src_Banner_Banner","LeftBanner_LeftBanner","Details_Details","Boolean","window","location","hostname","ReactDOM","render","src_App_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bdcce4af.chunk.js","sourcesContent":["export default {\n  Android: function() {\n      return navigator.userAgent.match(/Android/i);\n  },\n  BlackBerry: function() {\n      return navigator.userAgent.match(/BlackBerry/i);\n  },\n  iOS: function() {\n      return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n  },\n  Opera: function() {\n      return navigator.userAgent.match(/Opera Mini/i);\n  },\n  Windows: function() {\n      return navigator.userAgent.match(/IEMobile/i);\n  },\n  any: function() {\n      return (this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows());\n  }\n};","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './iconHref.scss'\n\nexport default function IconHref({ icon, url, text}) {\n  return (\n    <a href={url} className='iconHref'>\n      <FontAwesomeIcon icon={icon} pull=\"left\" size='2x'/> {text}\n    </a>\n  )\n}\n","import React, { Component } from 'react';\nimport './banner.scss';\nimport posed from \"react-pose\";\nimport { faEnvelope, faMobileAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faGitSquare, faLinkedin } from '@fortawesome/free-brands-svg-icons'\nimport IconHref from '../SharedComponents/IconHref/IconHref'\nclass Banner extends Component {\n\n  get Icons() {\n    return posed.div();\n  }\n\n  get iconList() {\n    return [\n      { text:'Git repo' , icon:faGitSquare, url:'https://github.com/a3qube' ,},\n      { text:'LinkedIn' , icon:faLinkedin, url:'https://www.linkedin.com/in/arjun-a-nair-74194536',},\n      { text:'eMail' , icon:faEnvelope, url:'mailto:arjun.nair89@outlook.com' ,},\n      { text:'Mobile' , icon:faMobileAlt, url:'tel:+1-669-241-9274'},\n    ];\n  }\n\n  render() {\n    const { Icons, iconList } = this;\n    return (\n      <header>\n        <div className=\"heading\">\n          <h1> Arjun Nair </h1>\n        </div>\n        <div className=\"icons\">\n          <Icons>\n            { iconList.map( ic =>\n              <IconHref url={ic.url} icon={ic.icon}/>\n            )}\n          </Icons>\n        </div>\n\n\n      </header>\n\n    );\n  }\n}\n\nexport default Banner;\n","import posed, { Transition } from 'react-pose';\nimport React from 'react';\nimport './tech.scss';\n\nconst TechDiv = posed.li({\n  enter: { opacity: 1, transition: { duration: 2000 }},\n  exit: { opacity: 0 }\n});\n\nexport default ({ size, tech, id }) => {\n\n  return (\n    <Transition animateOnMount>\n      <TechDiv key={`${id}-li`} className='techLi' style={{ fontSize: size + 'px'}} >\n        {tech}\n      </TechDiv>\n    </Transition>\n  );\n}","import React, { Component } from 'react';\nimport './leftBanner.scss';\nimport Tech from './Tech/Tech'\nimport posed, { Transition } from 'react-pose';\n\nexport default class LeftBanner extends Component {\n\nget technologiesWorked() {\n  const experience = {\n    HIGH: 31,\n    BELOW_HIGH: 28,\n    MID: 25,\n    BELOW_MID: 22,\n    LOW: 15,\n  }\n  return [\n    new Technologies('React', experience.HIGH),\n    new Technologies('MobX', experience.HIGH),\n    new Technologies('Node', experience.HIGH),\n    new Technologies('Yarn', experience.HIGH),\n    new Technologies('Webpack', experience.HIGH),\n    new Technologies('Jenkins', experience.HIGH),\n    new Technologies('Java', experience.HIGH),\n    new Technologies('Spring Boot', experience.HIGH),\n    new Technologies('Docker', experience.HIGH),\n  ];\n}\n\nget TechStackHeader() {\n  return posed.div({\n    enter: {\n      opacity: 1,\n      delay: 300,\n    },\n    exit: {\n      opacity: 0,\n      transition: { duration: 200 }\n    }\n  });\n}\nget UL() {\n  return posed.ul({\n    enter: { staggerChildren: 100}\n  });\n}\n\n  render() {\n    const { TechStackHeader, UL } = this;\n    return (\n        <React.Fragment>\n          <Transition animateOnMount>\n            {<TechStackHeader className=\"techStackHeader\" key=\"TechStackHeader\">\n                Tech Stack\n              </TechStackHeader>}\n          </Transition>\n          <div className='leftBanner'>\n          <Transition animateOnMount>\n            <UL key=\"leftBannerUL\">\n                {\n                  this.technologiesWorked.map((t) => <Tech key={`${t.id}-ul`} {...t}/> )\n                }\n            </UL>\n          </Transition>\n          </div>\n        </React.Fragment>\n    );\n  }\n}\n\nclass Technologies {\n\n  constructor(t, size) {\n    this.tech = t;\n    this.size = size;\n  }\n\n  get id() {\n    return `${this.tech.replace(/ /g,\"-\")}-tech`;\n  }\n}","export default {\n   \"experience\":[\n       {\n           \"from\": \"May 14, 2018\",\n           \"to\": \"today\",\n           \"role\": \"FULL STACK DEVELOPER\",\n           \"employer\":\"KFORCE\",\n           \"client\":\"Expedia\",\n           \"domain\": \"TRAVEL AND HOSPITALITY\",\n           \"responsibilities\" : [\n                \"Created re-suable React component with limited props, with the help of Mobx viewstore and models\",\n                \"Handling the react state with Mobx, with the observe-observer pattern\",\n                \"Handling the react state with Mobx, with the observe-observer pattern\",\n                \"Application perfroms array and object operations where large data sets are expected\",\n                \"Polyflills(Babel) are used support all the browsers while leveraging the ES6 features\",\n                \"CSS is compiled from less\",\n                \"CSS is coded ensuring interface is available on all browsers\",\n                \"Yarn is used and the build manager and serving the live application for development\",\n                \"Serviceworkers are used to enhance the offline capabilities of the app\",\n                \"Created a service in spring boot connecting to 3rd party end points\",\n                \"Generating PDF and CSV on fly\",\n                \"Use GIT for collaborating development effort\",\n                \"Create branches and PRs for different cards assigned\",\n                \"Review PRs and address review comment ensuring the best version is merged\",\n                \"Demo the application enhancements and bugs fixed for every 2 weeks\",\n                \"Participate in analyzing and judging the efforts in sprint planning\",\n                \"Supporting production deployment on rotation basis\",\n                \"Be prompt on the feedback channel and be able to judge and fix P1 and P0 prod issues\",\n           ]\n       }\n\n    ]\n}\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTerminal } from '@fortawesome/free-solid-svg-icons'\nimport data from '../data';\nimport posed, { PoseGroup } from 'react-pose';\nimport './details.scss';\nexport default class Details extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state={ isVisible: false};\n    setTimeout( ()=> {this.setState({isVisible: true})});\n  }\n  get LI() {\n    return posed.li({\n      enter: { opacity: 1, transition: { duration: 200 }},\n      exit: { opacity: 0 }\n    });\n  }\n  get Container() {\n    return posed.div();\n  }\n\n  get UL() {\n    return posed.ul({\n      enter: { staggerChildren: 50 }\n    });\n  }\n  render() {\n    const { Container, LI, UL, state: {isVisible}} = this;\n    return (\n       <PoseGroup className='details'>\n       { isVisible &&\n       <Container key='cont'>\n          <h3 > {data.experience[0].client} </h3>\n            <UL key='ul' className='responsibilites'>\n              {data.experience[0].responsibilities.map ( (l, i) =>\n              <LI key={`resp ${i}`} >\n                <FontAwesomeIcon icon={faTerminal} pull=\"left\" transform=\"shrink-4\"/>  {l}\n              </LI>)}\n            </UL>\n        </Container>}\n      </PoseGroup>\n\n    )\n  }\n}","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog, faMobile } from '@fortawesome/free-solid-svg-icons'\nimport './mobileDeviceSupportError.scss';\n\nexport default class MobileDeviceSupportError extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"errorPageGear\">\n         <FontAwesomeIcon icon={faCog} spin size=\"6x\"/>\n        </div>\n        <div class='errorPageBox'>\n         <FontAwesomeIcon icon={faMobile}/> Friendly version under construction\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './app.scss';\nimport deviceCheck from '../utils/deviceCheck'\nimport Banner from '../Banner/Banner';\nimport LeftBanner from '../LeftBanner/LeftBanner';\nimport Details from \"../Details/Details\";\nimport MobileDeviceSupportError from '../ErrorPages/MobileDeviceSupportError'\nclass App extends Component {\n\n  render() {\n    return (\n      deviceCheck.any() ? <MobileDeviceSupportError /> :\n      (\n      <div className=\"App\">\n        <div className=\"app_banner\">\n          <Banner />\n        </div>\n        <div className=\"mainContent\">\n          <section>\n            <LeftBanner />\n          </section>\n          <main>\n            <Details />\n          </main>\n        </div>\n      </div> )\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}